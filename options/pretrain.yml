name : BarlowNew # Name for the training process, which will show in logger file name
use_tb_logger: true
model: Barlow # the model architecture you select
distortion: sr
scale: 1
gpu_ids: [0,1] # gpu used for training

#### datasets
datasets:
  train:
    name: UEN
    mode: multi_task
    interval_list: [1]
    random_reverse: false
    border_mode: false
    cache_keys: ~
    filelist: pretraining_data_path.txt # the training data path should be saved in an txt file and here is the file path

    use_shuffle: true
    n_workers: 0  
    batch_size: 8
    IN_size: 256
    augment: true
    color: RGB

  val:
    name: UEN
    mode: UEN_test
    filelist: val_data_path.txt # the validation data path should be saved in an txt file and here is the file path
    batch_size: 1 # do not change
    use_shuffle: false


#### network structures
network_G:
  
  which_model_G: multi
  nf: 16
  groups: 8
  

#### path
path:
  root: ./output # path for saving loggers and models
  results_root: ./output # path for saving loggers and models
  pretrain: ./SIEN/pretrain1 # This is not going to help, just set it to random.
  pretrain_model_G: ./output/distill/ # if you want to continue training from a pre-trained model, set the model path here
  strict_load: false
  resume_state: ~

#### training settings: learning rate scheme, loss
train:
  lr_G: !!float 1e-4
  lr_scheme: MultiStepLR
  beta1: 0.9
  beta2: 0.99
  niter: 60000 # change it for longer or shorter training period
  ewc: false
  distill: true
  ewc_coff: 50.0
  distill_coff: 0.2
  fix_some_part: ~
  warmup_iter: -1  # -1: no warm up
  ComputeImportance: false
  istraining: true
  lr_scheme: MultiStepLR
  lr_steps: [60, 90]
  lr_gamma: 0.5

  eta_min: !!float 5e-6
  pixel_criterion: binary
  pixel_weight: 5000.0
  ssim_weight: 1000.0
  vgg_weight: 1000.0

  val_epoch: !!float 1
  manual_seed: 0

# sth new
  loss_form: sym

#### logger
logger:
  print_freq: 40
  save_checkpoint_epoch: !!float 1

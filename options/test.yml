#### general settings
name: TEST # logger name
use_tb_logger: true
model: sr # model name. We would load model architectures according to ['model'] param.
distortion: sr
scale: 1
gpu_ids: [0]

#### datasets
datasets:
  # The training part is not actually used during testing. But I just want to reduce unwanted problems, so I keep it.
  train:
    name: UEN
    mode: UEN_train
    interval_list: [1]
    random_reverse: false
    border_mode: false
    cache_keys: ~
    filelist: /home/xxx.txt

    use_shuffle: true
    n_workers: 0  # per GPU
    batch_size: 12
    # IN_size: 384
    IN_size: 256
    augment: true
    color: RGB

  val:
    name: UEN
    mode: UEN_test
    filelist: /home/test.txt # Change it to your path. The image paths used for testing should be stored in this file.
    batch_size: 1 # Do not change
    use_shuffle: false


#### network structures
network_G:
  which_model_G: SID
  nf: 16
  groups: 8

#### path
path:
  root: ./output
  results_root: ./output
  pretrain: ./SIEN/pretrain1 # This is not important. Just keep it.
  pretrain_model_G: './pretrain/model.pth' # model weight path
  strict_load: false
  resume_state: ~

#### training settings: learning rate scheme, loss
# The training setting is not actually used during testing. But I just want to reduce unwanted problems, so I keep it.
train:
  lr_G: !!float 1e-4
  lr_scheme: MultiStepLR
  beta1: 0.9
  beta2: 0.99
  # niter: 1200000
  niter: 1
  ewc: false
  distill: true
  ewc_coff: 50.0
  distill_coff: 0.2
  fix_some_part: ~
  warmup_iter: -1  # -1: no warm up
  ComputeImportance: false
  istraining: true
  lr_scheme: MultiStepLR
  lr_steps: [60, 90]
  lr_gamma: 0.5

  eta_min: !!float 5e-6
  pixel_criterion: l1
  pixel_weight: 5000.0
  ssim_weight: 1000.0
  vgg_weight: 1000.0

  val_epoch: !!float 1
  manual_seed: 0

#### logger
logger:
  print_freq: 40
  save_checkpoint_epoch: !!float 25
